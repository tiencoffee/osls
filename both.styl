$colors = {
	gray: {
		button: #ebf1f5 #182026 #ced9e0 #182026 #10161a33
		menu: #182026 #ebf1f5 #182026 #ced9e0 #738694
	}
	blue: {
		button: #137cbd #fff #0e5a8a #137cbd #137cbd33
		menu: #137cbd #137cbd #fff #0e5a8a #d8e1e8
	}
	green: {
		button: #0f9960 #fff #0a6640 #0f9960 #0f996033
		menu: #0f9960 #0f9960 #fff #0a6640 #d8e1e8
	}
	yellow: {
		button: #d9822b #fff #a66321 #d9822b #d9822b33
		menu: #d9822b #d9822b #fff #a66321 #d8e1e8
	}
	red: {
		button: #db3737 #fff #a82a2a #db3737 #db373733
		menu: #db3737 #db3737 #fff #a82a2a #d8e1e8
	}
}
$full =
	position absolute
	left 0
	top 0
	width 100%
	height 100%
$text-truncate =
	overflow hidden
	text-overflow ellipsis
	white-space nowrap
	word-break break-word
$scroll-y =
	overflow-x hidden
	overflow-y auto
$events =
	pointer-events none
	> *
		pointer-events auto
appearance()
	-webkit-appearance arguments
	appearance arguments
text-security()
	-webkit-text-security arguments
	text-security arguments
user-drag()
	-webkit-user-drag arguments
	user-drag arguments

body
	margin 0
	font-family "Barlow",sans-serif
	font-size 15px
	line-height 1.2
	color #182026
	overflow hidden
	word-break break-word
	user-select none
*, *:before, *:after
	box-sizing border-box
*
	vertical-align middle
a, img
	user-drag none
textarea
	resize vertical
::selection
	background #137cbd
	color #fff

html
body
#appEl
#portalsEl
	{$full}
#portalsEl
	position relative
	{$events}
.Portal
	pointer-events none
	z-index 8
	> *
		pointer-events auto
.Icon
	display inline-flex
	justify-content center
	align-items center
	font-size 106.75%
	pointer-events none
.Icon-img
	width 1em
	height 1em
	display inline-block
	object-fit scale-down
.Popover
	border solid 1px #ced9e0
	border-radius 8px
	background #fff
	box-shadow 0 1px 3px #8a9ba888
.Popover-target
	border-radius 6px
	display inline-block
.Button
	min-width 30px
	min-height 30px
	padding 5px
	border 0
	border-radius 6px
	display inline-flex
	justify-content center
	align-items center
	font inherit
	cursor pointer
	outline 0
.Button-fill
	width 100%
for align in left center right
	.Button-alignText-{align}
		> .Button-text
			text-align align
.Button-text
	padding 0 5px
	flex-grow 1
	pointer-events none
.Button-icon
	pointer-events none
for color, c in $colors
	.Button-{color}
		border: solid 1px c.button[2]
		background: c.button[0]
		color: c.button[1]
		&:active
		&.active
			background: c.button[2]
		&.Button-minimal
			border 0
			background: #0000
			color: c.button[3]
			&:hover
			&.hover
				background: c.button[4]
				color: c.text
.TextInput
	position relative
	min-height 30px
	border solid 1px #ced9e0
	border-radius 6px
	display flex
	flex-grow 1
	align-items center
	background #fff
	&.focus
		border-color transparent
		border-radius 6px !important
		box-shadow 0 0 0 2px #137cbd
		z-index 1
.TextInput-input
	min-height 28px
	padding 5px 10px
	border 0
	flex-grow 1
	font inherit
	background #0000
	outline 0
.TextInput-inputWithLeftElement
	padding-left 0
.TextInput-inputWithRightElement
	padding-right 0
.TextInput-element
	min-width 28px
	padding 2px
	display inline-flex
	justify-content center
	align-items center
	> .Button
		min-width 24px
		height 24px
		min-height 24px
.PasswordInput
	text-security square
.PasswordInput-showPassword
	text-security none
.NumberInput-input
	&::-webkit-inner-spin-button
		appearance none
.NumberInput-buttons
	height 30px
	display flex
	flex-direction column
.NumberInput-button
	min-height 15px
.NumberInput-button-up
	border-bottom 0
	border-radius 0 6px 0 0
.NumberInput-button-down
	border-radius 0 0 6px 0
.Menu
	min-width 180px
	max-width 360px
	padding 5px
	border solid 1px #ced9e0
	border-radius 8px
	display inline-block
	background #fff
.Menu-fill
	max-width unset
	width 100%
.Menu-minimal
	padding 0
	border 0
.Menu-item
	min-height 30px
	position relative
	padding 5px
	border-radius 6px
	display flex
	align-items center
.Menu-item-noSubmenu
	cursor pointer
for color, c in $colors
	.Menu-item-{color}
		color: c.menu[0]
		&:hover
		&.hover
			background: c.menu[1]
			color: c.menu[2]
			.Menu-itemLabel
				color: c.menu[4]
		&.Menu-item-noSubmenu
			&:active
			&.active
				background: c.menu[3]
				color: c.menu[2]
				.Menu-itemLabel
					color: c.menu[4]
			.Menu-itemLabel
				font-size 13px
.Menu-itemIcon
	min-width 1em
	max-width 1em
	margin-right 10px
	display inline-flex
	align-items center
	pointer-events none
.Menu-itemText
	flex-grow 1
	pointer-events none
	{$text-truncate}
.Menu-itemLabel
	margin-left 10px
	flex-shrink 0
	text-align right
	color #738694
	pointer-events none
	{$text-truncate}
.Menu-submenu
	min-width 160px
	box-shadow 0 1px 3px #8a9ba888
	z-index 2
.Menu-divider
	margin 5px
	border-top solid 1px #d8e1e8
.Select
	width 100%
.Select-content
	width 100%
	max-height calc(100vh - 50px)
	overflow auto
	.Menu
		border 0
.ControlGroup
	display flex
	> *
		margin-right -1px
		border-radius 0
	> :first-child
		border-top-left-radius 6px
		border-bottom-left-radius 6px
	> :last-child
		margin-right 0
		border-top-right-radius 6px
		border-bottom-right-radius 6px
	> .Popover-target
		> *
			border-radius inherit
	> .Popover-target
	> .ControlGroup
		&:first-child:not(:last-child)
			> :last-child
				border-top-right-radius 0
				border-bottom-right-radius 0
		&:last-child:not(:first-child)
			> :first-child
				border-top-left-radius 0
				border-bottom-left-radius 0
		&:not(:first-child):not(:last-child)
			> *
				border-radius 0
.ContextMenu
	box-shadow 0 1px 3px #8a9ba888

.row
	display flex
	flex-direction row
.column
	display flex
	flex-direction column
.col
	flex-grow 1
.col-0
	flex-shrink 0
for i in range(1, 12)
	val = floor(i / 12 * 100%, 2)
	.row > .col-{i}
		width val
	.column > .col-{i}
		height val
	val = floor(100% / i, 2)
	.row-{i}
		display grid
		grid-template-columns repeat(i,1fr)
		> .col-{i}
			grid-column span (i)
.full
	{$full}
.wrap
	flex-wrap wrap
.nowrap
	flex-wrap nowrap
for dir in row column
	.{dir}
		prop = dir is row ? "justify-content" : "align-items"
		&.start
			{prop} flex-start
		&.center
			{prop} center
		&.end
			{prop} flex-end
		prop = dir is row ? "align-items" : "justify-content"
		&.top
			{prop} flex-start
		&.middle
			{prop} center
		&.bottom
			{prop} flex-end
.between
	justify-content space-between
.around
	justify-content space-around
.evenly
	justify-content space-evenly
.stretch
	align-items stretch
props = {p: padding, m: margin}
sides = {t: top, r: right, b: bottom, l: left}
sizes = 40px 20px 10px 5px 2px 0
for p, prop in props
	for size, i in sizes
		i = 5 - i
		.{p}-{i}
			{prop} size
		.-{p}-{i}
			{prop} -(size)
		.{p}x-{i}
			{prop}-left size
			{prop}-right size
		.{p}y-{i}
			{prop}-top size
			{prop}-bottom size
		.-{p}x-{i}
			{prop}-left -(size)
			{prop}-right -(size)
		.-{p}y-{i}
			{prop}-top -(size)
			{prop}-bottom -(size)
		for s, side in sides
			.{p}{s}-{i}
				{prop}-{side} size
			if p is m and i
				.-{p}{s}-{i}
					{prop}-{side} -(size)
for pos in absolute relative fixed
	.{pos}
		position pos
for size in 100 75 50 25 0
	.w-{size}
		width (size)%
	.h-{size}
		height (size)%
for i in 0..5
	.z-{i}
		z-index i
	if i
		.-z-{i}
			z-index -(i)
for dis in block inline-block inline flex inline-flex
	.{dis}
		display dis
.hidden, [hidden]
	display none
for align in left center right justify
	.text-{align}
		text-align align
.text-baseline
	vertical-align baseline
.text-bold
	font-weight bold
.text-italic
	font-style italic
.text-nowrap
	white-space nowrap
	word-break break-word
.text-pre
	white-space pre
.text-prewrap
	white-space pre-wrap
	word-break break-word
.text-truncate
	{$text-truncate}
.text-select
	user-select auto
.text-noselect
	user-select none
.text-security
	text-security square
.scroll
	overflow auto
.scroll-y
	{$scroll-y}
.noscroll
	overflow hidden
.event
	pointer-events auto
.noevent
	pointer-events none
.events
	{$events}
